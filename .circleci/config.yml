version: 2
jobs:
  build:
    machine:
      image: classic:latest
    environment:
      GOPATH: /home/ubuntu:$GOPATH
      SRCDIR: /home/ubuntu/src/github.com/weaveworks/weave
      PATH: $PATH:$HOME/.local/bin:/opt/google-cloud-sdk/bin
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      # Base name of VMs for integration tests:
      NAME: test-$CIRCLE_BUILD_NUM-$CIRCLE_NODE_INDEX
      TEST_VMS_SETUP_OUTPUT_FILE: $CIRCLE_ARTIFACTS/test_vms_setup_output.txt
      TEST_VMS_PROV_AND_CONF_LOCK_FILE: $CIRCLE_ARTIFACTS/test_vms_provisioned_and_configured.txt
      TEST_VMS_READY_LOCK_FILE: $CIRCLE_ARTIFACTS/test_vms_ready.txt
      # Google Cloud Platorm images for integration tests:
      USE_IMAGE: 1
      DISK_NAME_PREFIX: test-$CIRCLE_BUILD_NUM-0
    parallelism: 2
    steps:
      - checkout
      # copy source dir and submodule update --init
      - run: bin/circle-dependencies-post-sources
      - restore_cache:
          keys: v1-cache-{{ checksum "build/Dockerfile" }}-{{ checksum "build/build.sh" }}
      # kick off creation of test VMs
      - run:
          command: bin/provision_test_vms.sh
          background: true
      # create build image and make all
      - run: bin/circle-dependencies-post
      - save_cache:
          key: v1-cache-{{ checksum "build/Dockerfile" }}-{{ checksum "build/build.sh" }}
          paths:
            - "~/docker"
      # when VMs are ready, copy built software to them
      - run:
          command: bin/circle-test-pre
          background: true
      - run: bin/circle-test-unit
      - run:
          command: bin/circle-test-smoke
          no_output_timeout: 360s
      # Generate code coverage reports
      - run: bin/circle-test-teardown
      # Destroy testing VMs:
      - run:
          command: "cd $SRCDIR/test && ./run-integration-tests.sh destroy"
          background: true
      # run goveralls; copy coverage reports to artifacts dir
      - deploy:
          command: $SRCDIR/bin/circle-teardown-pre
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              bin/circle-deploy-master
            fi
